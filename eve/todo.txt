bugs & misc:
* rework keyboard input to support different terminals
editor commands will work with either ctrl/alt and fallback to ctrl/alt+letter
replace key mapping table with trie based word map
* pasting screen selection from eve doesn't copy newlines on unix
print clear to eol code at the end of line
* get rid of global vars

editor:
* autocomplete
* new/open/save
* switch between documents with alt+number
* find/replace all, ignore case
* syntax highlighting
* parse build output for errors
* undo/redo
* regex find/replace, match word
* command history
* config file
* clipboard integration
* selection with arrows and highlighting
* handle console/terminal window scrolling/resizing
handle window resize event on Windows
rewrite screen update code to draw line by line
review logic with preferred column
* customizable key mappings
* line wrapping

release:
* graphical user interface
* webpage, payment system
* registration code generation/checking
* license, relase notes, documentation
* install package, auto-update
* package for app stores, linux distros
* version for iOS/Android?

foundation:
* international support
locales (formatting, string compare/search/case conversion)
support both UTF encodings on any platform or same encoding everywhere?
encoding conversion
handle invalid Unicode sequences
* containers
initializer_list support
conversion between containers (array to list etc)
create element in place
move node pointers instead of nodes when rehashing to avoid allocation
benchmark/improve hash function
* strings
split/join, tokenizer
conversion to binary/hex
simple parsing a la scanf
simple regular expressions
type safe string formatting
* convert any object to string
* files
memory mapped I/O
file system access
* date and time
* threads/atomics/async
* function objects (function/bind)
* type traits
* foundation improvements
prohibit write access to container data via pointer?
acquire with capacity?
blob class for array of value types?
simple string too?
make sure app code doens't do low level stuff and relies on foundation
StringWithEncoding - string with encoding information
support for zero chars in string?
replace smart pointers with smart references
scoped pointer, copy object when pointer is copied
rename the types to make int 64 bit?
string constructor that accepts ascii strings
log memory allocations
move assignment is called when string is assigned an r-value freeing string storage
unicode char literals don't work on solaris/aix
how to minimize the use of raw pointers?
list vs array - when to use?
get rid of underscores?
equals/less - function or overloaded operator?

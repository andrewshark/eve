bugs & misc:

release:
* rework keyboard input to support different terminals
editor commands will work with either ctrl/alt and fallback to ctrl/alt+letter
* webpage, install package, license, release notes, documentation
* keep or discard unprintable chars?
* force saving files to trim whitespace and remove non-printable chars?

editor:
* switch between documents with alt+number
sort documents in most recently used order
* copy/delete lines
* find/replace in files (with alt+shift)
* clipboard integration on windows
* new/open/save
* syntax highlighting
* parse build output for errors
* undo/redo
* regex find/replace, match word
* command history
* config file
* selection improvements
screen selection
with arrows and highlighting
* customizable key mappings
* line wrapping
* find/replace back
* graphical user interface
* repeat last input sequence
* autocomplete improvements
use tab? put cursor at the end after completion?
trigger autocomplete automatically?
disable autocomplete for text files?
initiate autocomplete after user pauses typing?
enable autocomplete only for words that were completed before?
compete longest common string or next match?
bring back dictionary based autocomplete?
perfer recently used words
scan all documents in current directory
more efficient data structure
* performance optimization
editor is slow on large files
don't scan text from beginning when drawing the screen
group small changes and apply together
store text as a list of lines
redraw only one line for small changes

foundation:
* foundation improvements
log memory allocations
* international support
locales (formatting, string compare/search/case conversion)
encoding conversion
handle invalid Unicode sequences
* containers
initializer_list support
conversion between containers (array to list etc)
create element in place
move node pointers instead of nodes when rehashing to avoid allocation
benchmark/improve hash function
append for Array? merge Buffer and Array?
* strings
string constructor that accepts ascii strings
store short strings in place
split/join, tokenizer
conversion to binary/hex
simple parsing a la scanf
simple regular expressions
type safe string formatting
* convert any object to string
* files
memory mapped I/O
file system access
* date and time
* threads/atomics/async
* function objects (function/bind)
* type traits

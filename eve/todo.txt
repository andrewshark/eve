bugs & misc:
* rework keyboard input to support different terminals
editor commands will work with either ctrl/alt and fallback to ctrl/alt+letter

editor:
* copy/delete lines
* new/open/save
* switch between documents with alt+number
* syntax highlighting
* parse build output for errors
* undo/redo
* regex find/replace, match word
* command history
* config file
* clipboard integration
* selection improvements
screen selection
with arrows and highlighting
* customizable key mappings
* line wrapping
* find/replace back
* graphical user interface
* autocomplete improvements
trie based suggestions
scan all documents in current directory
* performance optimization
group small changes and apply together
store text as a list of lines
redraw only one line for small changes

release:
* webpage, payments
* registration code generation/checking
* license, relase notes, documentation
* install package, auto-update
* package for app stores, linux distros
* version for iOS/Android?

foundation:
* international support
locales (formatting, string compare/search/case conversion)
support both UTF encodings on any platform or same encoding everywhere?
encoding conversion
handle invalid Unicode sequences
* containers
initializer_list support
conversion between containers (array to list etc)
create element in place
move node pointers instead of nodes when rehashing to avoid allocation
benchmark/improve hash function
* strings
string constructor that accepts ascii strings
store short strings in place
split/join, tokenizer
conversion to binary/hex
simple parsing a la scanf
simple regular expressions
type safe string formatting
* convert any object to string
* files
memory mapped I/O
file system access
* date and time
* threads/atomics/async
* function objects (function/bind)
* type traits
* foundation improvements
log memory allocations

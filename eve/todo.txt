bugs & misc:
* make sure eve builds with minimal dependencies
* research about runtime checking by compiler and library
* handle SIGWINCH to detect terminal size changes
* some keys don't work in Linux, macOS, xterm
alt+[ and alt+O don't work
rework keyboard input to support different terminals
allow customizable key mappings and reading partial keys
* unicode support
support utf-8 on windows and utf-16 on linux?
research utf-8 support in windows and macos
what's up with combining chars?
implement normalization, case conversion, compare using OS provided functions
* foundation improvements
prohibit write access to container data via pointer?
acquire with capacity?
blob class for array of value types?
simple string too?
make sure app code doens't do low level stuff and relies on foundation
StringWithEncoding - string with encoding information
support for zero chars in string?
replace smart pointers with smart references
rename the types to make int 64 bit?
string constructor that accepts ascii strings
log memory allocations
move assignment is called when string is assigned an r-value wiping out string storage

basic features:
* search/replace
* selection with highlighting and alt+arrows
* unindent with backspace
* go to line
* terminal window resizing
* block indent, comment
* paragraph back/forward

advanced features:
* multiple file
* regex search/replace
* search/replace in files
* parse build output for errors
* syntax highlighting
basic highlighting based on file suffix for a few common languages
keywords, numbers, strings, comments
* word completion
parse a set of directories for words
cache results in a file
offer completion after second letter
offer recently used, located nearby first
complete on tab or punctuation

foundation features:
* convert any object to string
* type safe string formatting
* date and time
* locales (formatting, string compare/search/case conversion)
* encoding conversion
* threads/atomics/async
* function objects (function/bind)
* type traits
* containers
initializer_list support
conversion between containers (array to list etc)
create element in place
move node pointers instead of nodes when rehashing to avoid allocation
* strings
split/join, tokenizer
conversion to binary/hex
simple parsing a la scanf
simple regular expressions
handle invalid unicode sequences

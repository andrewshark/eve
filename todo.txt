gui:
* trouble with message box and wm_paint handler

bugs:
* shell script highlighting
str gets highlighted as var after $var at the end of line
--abc=123 command line option highlighted as var assignment
* stop at newline when deleting word back?
* toggle selection doesn't work sometimes
* indent/unindent seems buggy with selection larger than one screen
select large block from middle till end, unindent, cursor is beyod eof
seems like screen redraw issue, alt+' doesn't help
* don't trim whitespace by default
* don't open directories as text files

editor:
* readonly mode
* run command, run last command
* auto detect line endings
* delete to start/end of line
* autocomplete on enter
* go to matching brace
* cycle documents in most recently used order
* copy/delete lines
* change case
* parse build output for errors
* undo/redo
* find all occurences/go to symbol
* find/replace back
* regex find/replace, match word, match newline
* find/replace in files
* command history
* config file
* selection with mouse/arrows and highlighting
* customizable key mappings
* line wrapping
* run macro n times, run macro on selection
* graphical user interface
* syntax highlighting improvements
improved document type detection with shebang
support for other languages
better highlighting for numbers, nested strings
comments in preprocessor directive
cache highlighting info
document type override
* autocomplete improvements
complete longest
give nearby words higher priority
scan all documents in current directory
more efficient data structure
optimize rebuilding of word database
autocomplete for file names
* performance optimization
open large files in native encoding
turn off indexing and whitespace trimming for large files
use memory mapping and on demand/background loading
group small insert/delete changes and apply together
store text as a list of lines/blocks
redraw as few characters as possible instead of enitre screen
multiple input events in GUI mode
* move to prev/next paragraph
* quick open for files in current directoy
* preserve console output when exiting
* many ctrl and alt combinations don't work in Linux console
* clipboard integration on macos

foundation:
* log complex objects and memory allocations
* international support
locales (formatting, string compare/search/case conversion)
encoding conversion
handle invalid Unicode sequences
* containers
initializer_list support
conversion between containers (array to list etc)
create element in place
move node pointers instead of nodes when rehashing to avoid allocation
benchmark/improve hash function
append for Array? merge Buffer and Array?
* strings
use USC-2 for all strings?
charAt/charForward as one call
string constructor that accepts ascii strings
store short strings in place
split/join, tokenizer
conversion to binary/hex
simple parsing a la scanf
simple regular expressions
type safe string formatting
* convert any object to string
* memory mapped I/O, file system access
* date and time
* threads/atomics/async
* function objects (function/bind)
* type traits

misc:
* create public web page
* minimal rebuild, precompiled headers
* split foundation into a library
* run release version in profiler, memory/thread checker
* gcc compiled code on Solaris and AIX doesn't link

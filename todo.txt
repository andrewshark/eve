release:
* many ctrl and alt combinations don't work on Linux
figure out keycode to key combination mapping
* clipboard integration on macos
* screen corruption on windows after scrolling console window
* cursor should go to the end of the block after paste?
* delete chars should stop on newline?
* syntax highlighting
clear colors before make
support for other languages (shell, xml, html, java, c#, javascript, python)
improve highlightChar logic
check highlighting performance
improved document type detection
document type override
add keyword and types to autocomplete
update webpage
* run editor in profiler, memory/thread checker
* repaint entire screen for big updates like next page

editor:
* f9/f10 - save/save all?
* delete to start/end of line
* autocomplete on enter
* go to matching brace
* cycle documents in most recently used order
* copy/delete lines
* change case
* parse build output for errors
* undo/redo
* find all occurences/go to symbol
* find/replace back
* regex find/replace, match word, match newline
* find/replace in files
* command history
* config file
* selection with mouse/arrows and highlighting
* customizable key mappings
* line wrapping
* run macro n times, run macro on selection
* graphical user interface
* autocomplete improvements
give nearby words higher priority
scan all documents in current directory
more efficient data structure
optimize rebuilding of word database
* performance optimization
open large files in native encoding
turn off indexing and whitespace trimming for large files
use memory mapping and on demand/background loading
group small insert/delete changes and apply together
store text as a list of lines/blocks
redraw as few characters as possible instead of enitre screen

foundation:
* log debug output and memory allocations
* international support
locales (formatting, string compare/search/case conversion)
encoding conversion
handle invalid Unicode sequences
* containers
initializer_list support
conversion between containers (array to list etc)
create element in place
move node pointers instead of nodes when rehashing to avoid allocation
benchmark/improve hash function
append for Array? merge Buffer and Array?
* strings
use USC-2 for all strings?
charAt/charForward as one call
string constructor that accepts ascii strings
store short strings in place
split/join, tokenizer
conversion to binary/hex
simple parsing a la scanf
simple regular expressions
type safe string formatting
* convert any object to string
* files
memory mapped I/O
file system access
* date and time
* threads/atomics/async
* function objects (function/bind)
* type traits

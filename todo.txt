to do:
* blurry text on remote desktop
* website improvements
add executables for gui version
high resolution screenshot
nice color scheme for text, links and headers
better mobile version, alternative domains
* input improvements
ctrl+minus/plus don't work on windows, use WM_KEYUP instead?
test fancy character input like wiwndows mnemonic for russian
many ctrl and alt combinations don't work in Linux console
fallback for function keys (either alt key or command)
* run command that doesn't laucnh command prompt

editor likely:
* graphical user interface for linux and macos
* open files over network
* switch between source/header
* quick open files
name autocomplete, wildcards
open recrusively, open file at cursor
* delete to start/end of line
* go to matching brace, next/previous brace
* cycle documents in most recently used order
* copy/delete lines
* change case
* find/replace regex, backwards, match word/case
* undo/redo
* open multiple files in the same instance
* run macro until it reaches specified line
* language specific toggle comment
* display short help message if there're no files
* signed executable and installation package
* deb and rpm packages
* guess font size based on physical dpi in editor

syntax highlighting improvements:
* support for other languages
* improved handling of highlighting corner cases
* document type detection with shebang
* document type override

autocomplete improvements:
* complete longest
* give nearby words or words from same document higher priority
* autocomplete for file names
* scan all documents in directories

performance improvements:
* turn off indexing and syntax highlighting for large files
* group small insert/delete changes and apply together
* redraw as few characters as possible instead of enitre screen

editor maybe:
* customizable key mappings
* execute shell commands
* readonly mode
* run last command, command history
* file browser
* parse build output for errors, display inside the editor
* find/replace in files
* selection with mouse/arrows and highlighting
* line wrapping
* move to prev/next paragraph/function
* preserve console output when exiting
* fallbacks for function keys
* performance improvements
open large files in native encoding
use memory mapping and on demand/background loading
store text as a list of lines/blocks
syntax highlighting and autocomplete

foundation:
* international support
locales (formatting, string compare/search/case conversion)
encoding conversion
handle invalid Unicode sequences
* containers
initializer_list support
conversion between containers (array to list etc)
create element in place
move node pointers instead of nodes when rehashing to avoid allocation
benchmark/improve hash function
append for Array? merge Buffer and Array?
* strings
use USC-2 for all strings?
charAt/charForward as one call
string constructor that accepts utf-8 strings
store short strings in place
split/join, tokenizer
conversion to binary/hex
simple parsing a la scanf
simple regular expressions
type safe string formatting
* log memory allocations
* convert any object to string
* memory mapped I/O, file system access
* date and time
* threads/atomics/async
* function objects (function/bind)
* type traits
* optional, variant, weak pointer

misc:
* run release version in profiler, memory/thread checker
* don't use asserts in low level OS specific code
* support intel compiler, arm hardware, windows server
* version for mobile devices
* replace explicit pointers with smart pointers
* high resolution icon
* better solution for drawing cursor (overwrite instead of blend)
* don't erase cusror when prev position is not on the screen
* makefile improvements: precompiled headers, foundation library, incremental link
